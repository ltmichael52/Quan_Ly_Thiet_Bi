@model X.PagedList.IPagedList<Phong>

@{
    var dbContext = new ToolDbContext(); // Khởi tạo ToolDbContext
}
<script>
    $(document).ready(function () {
        var pageNumber = null;
        var searchStringAjax = '@ViewBag.searchStringController';
        var filterLoaiphongAjax = '@ViewBag.filterLoaiphongController';
        var filterCosoAjax = '@ViewBag.filterCosoController';

        $('.page-link').click(function () {
            pageNumber = $(this).attr('value');
            getToController();
        });

        function getToController() {
            $.ajax({
                url: '/admin/Phong/Index',
                type: 'GET',
                data: {
                    searchStringController: searchStringAjax,
                    filterLoaiphongController: filterLoaiphongAjax,
                    filterCosoController: filterCosoAjax,
                    page: pageNumber
                },
                success: function (response) {
                    $('#PartialViewPhong').html(response);
                },
                error: function () {
                    console.log("fail");
                }
            });
        }
    });
</script>

<table class="table table-striped">
    <thead class="text-center">
        <tr>
            <th>STT</th>
            <th>Mã phòng</th>
            <th>Tên phòng</th>
            <th>Loại phòng</th>
            <th>Tên cơ sở</th>
            <th>Thao tác</th>
        </tr>
    </thead>
    <tbody class="text-center">
        @{
            int count = Model.PageSize * (Model.PageNumber - 1);
        }
        @foreach (var phong in Model)
        {
            <tr>
                <td>@(++count)</td>
                <td>@phong.Map</td>
                <td>@phong.Tenphong</td>
                <td>@phong.Loaiphong</td>
                <td>
                    @{
                        var coso = dbContext.Cosos.FirstOrDefault(c => c.Macs == phong.Macs);
                        if (coso != null)
                        {
                            @coso.Tencs
                        }
                    }
                </td>
                <td>
                    <a class="btn btn-info btn-sm rounded" href="@Url.Action("Edit", "Phong", new { id = phong.Map })">
                        <svg class="icon icon-lg">
                            <use xlink:href="@Url.Content("~/LayoutAdmin/dist/vendors/_coreui/icons/svg/free.svg#cil-pen")"></use>
                        </svg>
                    </a>
                    <a class="btn btn-danger btn-sm btn-delete" href="@Url.Action("Delete", "Phong", new { id = phong.Map })">
                        <svg class="icon icon-lg">
                            <use xlink:href="@Url.Content("~/LayoutAdmin/dist/vendors/_coreui/icons/svg/free.svg#cil-trash")"></use>
                        </svg>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>



<nav>
    <ul class="pagination justify-content-center">
        <!-- First Page -->
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" value="1">Đầu</a>
            </li>
        }

        <!-- Page Numbers -->
        @for (var i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" value="@i">@i</a>
            </li>
        }

        <!-- Last Page -->
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" value="@Model.PageCount">Cuối</a>
            </li>
        }
    </ul>
</nav>

